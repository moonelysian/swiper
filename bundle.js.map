{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://swiper/./src/js/index.js","webpack://swiper/./src/js/swiper.js"],"sourcesContent":["import '../css/style.css';\nimport Swiper from './swiper';\n\nconst swiper = new Swiper();\n","export default class Swiper {\n  #currentPosition = 0;\n  #slideNumber = 0;\n  #slideWidth = 0;\n  #autoPlay = true;\n  #intervalId;\n\n  swiperWrapEl;\n  swiperListEl;\n  prevBtnEl;\n  nextBtnEl;\n\n  indicatorWrapEl;\n\n  controlWrapEl;\n\n  constructor() {\n    this.assignElement();\n    this.initSlideNumber();\n    this.initSlideWidth();\n    this.initSwiperListWidth();\n    this.addEvent();\n    this.createIndicator();\n    this.setIndicator();\n    this.initAutoPlay();\n  }\n\n  assignElement() {\n    this.swiperWrapEl = document.getElementById('swiper-wrap');\n    this.swiperListEl = this.swiperWrapEl.querySelector('#swiper');\n    this.nextBtnEl = this.swiperWrapEl.querySelector('#next');\n    this.prevBtnEl = this.swiperWrapEl.querySelector('#previous');\n    this.indicatorWrapEl = this.swiperWrapEl.querySelector('#indicator-wrap');\n    this.controlWrapEl = this.swiperWrapEl.querySelector('#control-wrap');\n    this.pauseBtnEl = this.controlWrapEl.querySelector('#pause');\n    this.playBtnEl = this.controlWrapEl.querySelector('#play');\n  }\n\n  initSlideNumber() {\n    this.#slideNumber = this.swiperListEl.querySelectorAll('li').length;\n  }\n\n  initSlideWidth() {\n    this.#slideWidth = this.swiperWrapEl.clientWidth;\n  }\n\n  initSwiperListWidth() {\n    this.swiperListEl.style.width = `${this.#slideNumber * this.#slideWidth}px`;\n  }\n\n  initAutoPlay() {\n    this.#intervalId = setInterval(this.moveToRight.bind(this), 3000);\n  }\n\n  addEvent() {\n    this.nextBtnEl.addEventListener('click', this.moveToRight.bind(this));\n    this.prevBtnEl.addEventListener('click', this.moveToLeft.bind(this));\n    this.indicatorWrapEl.addEventListener(\n      'click',\n      this.onClickIndicator.bind(this),\n    );\n    this.controlWrapEl.addEventListener('click', this.togglePlay.bind(this));\n  }\n\n  togglePlay(event) {\n    if (event.target.dataset.status === 'play') {\n      this.#autoPlay = true;\n      this.controlWrapEl.classList.add('play');\n      this.controlWrapEl.classList.remove('pause');\n      this.#intervalId = setInterval(this.moveToRight.bind(this), 3000);\n    } else if (event.target.dataset.status === 'pause') {\n      this.#autoPlay = false;\n      this.controlWrapEl.classList.add('pause');\n      this.controlWrapEl.classList.remove('play');\n      clearInterval(this.#intervalId);\n    }\n  }\n\n  onClickIndicator(event) {\n    const indexPosition = parseInt(event.target.dataset.index, 10);\n    if (Number.isInteger(indexPosition)) {\n      this.#currentPosition = indexPosition;\n      this.swiperListEl.style.left = `-${\n        this.#slideWidth * this.#currentPosition\n      }px`;\n      this.setIndicator();\n    }\n  }\n\n  moveToRight() {\n    this.#currentPosition += 1;\n    if (this.#currentPosition === this.#slideNumber) {\n      this.#currentPosition = 0;\n    }\n    this.swiperListEl.style.left = `-${\n      this.#slideWidth * this.#currentPosition\n    }px`;\n\n    if (this.#autoPlay) {\n      clearInterval(this.#intervalId);\n      this.#intervalId = setInterval(this.moveToRight.bind(this), 3000);\n    }\n    this.setIndicator();\n  }\n\n  moveToLeft() {\n    this.#currentPosition -= 1;\n    if (this.#currentPosition === -1) {\n      this.#currentPosition = this.#slideNumber - 1;\n    }\n    this.swiperListEl.style.left = `-${\n      this.#slideWidth * this.#currentPosition\n    }px`;\n\n    if (this.#autoPlay) {\n      clearInterval(this.#intervalId);\n      this.#intervalId = setInterval(this.moveToRight.bind(this), 3000);\n    }\n    this.setIndicator();\n  }\n\n  createIndicator() {\n    const docFragment = document.createDocumentFragment();\n    for (let i = 0; i < this.#slideNumber; i += 1) {\n      const li = document.createElement('li');\n      li.dataset.index = i;\n      docFragment.appendChild(li);\n    }\n    this.indicatorWrapEl.querySelector('ul').appendChild(docFragment);\n  }\n\n  setIndicator() {\n    this.indicatorWrapEl.querySelector('li.active')?.classList.remove('active');\n    this.indicatorWrapEl\n      .querySelector(`ul li:nth-child(${this.#currentPosition + 1})`)\n      .classList.add('active');\n  }\n}\n"],"names":["swiperWrapEl","swiperListEl","prevBtnEl","nextBtnEl","indicatorWrapEl","controlWrapEl","constructor","this","assignElement","initSlideNumber","initSlideWidth","initSwiperListWidth","addEvent","createIndicator","setIndicator","initAutoPlay","document","getElementById","querySelector","pauseBtnEl","playBtnEl","querySelectorAll","length","clientWidth","style","width","setInterval","moveToRight","bind","addEventListener","moveToLeft","onClickIndicator","togglePlay","event","target","dataset","status","classList","add","remove","clearInterval","indexPosition","parseInt","index","Number","isInteger","left","docFragment","createDocumentFragment","i","li","createElement","appendChild"],"sourceRoot":""}